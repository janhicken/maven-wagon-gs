module(name = "maven_wagon_gs")

bazel_dep(name = "aspect_rules_lint", version = "1.0.9")

register_toolchains("//:java_toolchain_definition")

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║                                   Maven                                    ║
# ╚════════════════════════════════════════════════════════════════════════════╝

bazel_dep(name = "rules_java", version = "8.7.1")
bazel_dep(name = "rules_jvm_external", version = "6.6")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")

MAVEN_WAGON_VERSION = "3.5.3"

maven.install(
    name = "maven_wagon_gs_maven",
    artifacts = [
        # Maven Wagon
        "org.apache.maven.wagon:wagon-provider-api:%s" % MAVEN_WAGON_VERSION,
        "org.apache.maven.wagon:wagon-provider-test:%s" % MAVEN_WAGON_VERSION,

        # Google Cloud Storage
        "com.google.cloud:google-cloud-storage:2.47.0",
        "com.google.cloud:google-cloud-nio:0.127.29",

        # Logging
        "org.slf4j:slf4j-jdk14:2.0.16",

        # Dev tools
        "com.google.googlejavaformat:google-java-format:1.25.2",
    ],
    excluded_artifacts = [
        "com.google.collections:google-collections",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    lock_file = "//:maven.lock",
    repositories = ["https://repo1.maven.org/maven2"],
    version_conflict_policy = "pinned",
)
use_repo(maven, "maven_wagon_gs_maven", "unpinned_maven_wagon_gs_maven")
